#### Setting up my environment & packages
```{r}
library(tidyverse)
library(lubridate)
library(DescTools)
```

#### Import data from CSV file downloaded from [divvybikes.com](https://www.divvybikes.com/)
```{r load data, include=FALSE}
tripdata_202003 <- read_csv("2020010203-divvy-tripdata.csv")
tripdata_202004 <- read_csv("202004-divvy-tripdata.csv")
tripdata_202005 <- read_csv("202005-divvy-tripdata.csv")
tripdata_202006 <- read_csv("202006-divvy-tripdata.csv")
tripdata_202007 <- read_csv("202007-divvy-tripdata.csv")
tripdata_202008 <- read_csv("202008-divvy-tripdata.csv")
tripdata_202009 <- read_csv("202009-divvy-tripdata.csv")
tripdata_202010 <- read_csv("202010-divvy-tripdata.csv")
tripdata_202011 <- read_csv("202011-divvy-tripdata.csv")
tripdata_202012 <- read_csv("202012-divvy-tripdata.csv")
tripdata_202101 <- read_csv("202101-divvy-tripdata.csv")
tripdata_202102 <- read_csv("202102-divvy-tripdata.csv")
tripdata_202103 <- read_csv("202103-divvy-tripdata.csv")
tripdata_202104 <- read_csv("202104-divvy-tripdata.csv")
tripdata_202105 <- read_csv("202105-divvy-tripdata.csv")
tripdata_202106 <- read_csv("202106-divvy-tripdata.csv")
tripdata_202107 <- read_csv("202107-divvy-tripdata.csv")
tripdata_202108 <- read_csv("202108-divvy-tripdata.csv")
```

#### Combine all datasets using `rbind()`
```{r combine data, include=FALSE}
tripdata <- rbind(tripdata_202003,
                  tripdata_202004,
                  tripdata_202005,
                  tripdata_202006,
                  tripdata_202007,
                  tripdata_202008,
                  tripdata_202009,
                  tripdata_202010,
                  tripdata_202011,
                  tripdata_202012,
                  tripdata_202101,
                  tripdata_202102,
                  tripdata_202103,
                  tripdata_202104,
                  tripdata_202105,
                  tripdata_202106,
                  tripdata_202107,
                  tripdata_202108)
```

##Get a big picture of the dataset using `glimpse()` and `str()`
```{r paged.print=TRUE}
glimpse(tripdata)
str(tripdata)
```
We have total *13 variables* and *7,141,855 observations*

##Find & remove missing values in the datasets then filter the invalid data.
##Remove rows with missing values
```{r}
colSums(is.na(tripdata))
```

##Data with missing values will be removed
```{r}
tripdata_cleaned <- tripdata[complete.cases(tripdata), ]
```

##Data with started_at greater than ended_at will be removed
```{r}
tripdata_cleaned <- tripdata_cleaned %>% 
  filter(tripdata_cleaned$started_at < tripdata_cleaned$ended_at)
```

##Make new variable used to distinguish the casual and membership riders

##Create new column `ride_length`
```{r}
tripdata_cleaned$ride_length <- tripdata_cleaned$ended_at - tripdata_cleaned$started_at
tripdata_cleaned$ride_length <- hms::hms(seconds_to_period(tripdata_cleaned$ride_length))
```

##Create new column `day_of_week`
```{r}
tripdata_cleaned$day_of_week <- wday(tripdata_cleaned$started_at, label = FALSE)
```

##Overall points of data
##Mean of ride_length
```{r}
tripdata_cleaned %>% 
  summarize(mean(ride_length))
```
##Max ride_length
```{r}
tripdata_cleaned %>% 
  summarize(max(ride_length))
```
##Min ride_length
```{r}
tripdata_cleaned %>% 
  summarize(min(ride_length))
```
##Mode of day_of_week
```{r}
Mode(tripdata_cleaned$day_of_week)
```
##Average ride_length for members and casual riders
```{r}
tripdata_cleaned %>% 
  group_by(member_casual) %>% 
  summarize(mean(ride_length))
```

##Average ride_length for users by day_of_week
```{r}
tripdata_cleaned %>% 
  group_by(day_of_week) %>% 
  summarize(mean(ride_length))
```

##Number of rides for users by day_of_week
```{r}
tripdata_cleaned %>% 
  group_by(day_of_week) %>% 
  summarize(number_of_rides = n())
```

##Average ride time by each day for members vs casual users
```{r}
aggregate(tripdata_cleaned$ride_length ~ tripdata_cleaned$member_casual + tripdata_cleaned$day_of_week, FUN = mean)
```

##Analyze ridership data by type and weekday
```{r}
ridership_type_weekday <- tripdata_cleaned %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarize(number_of_rides = n(),
            average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)
```

##Make visualization based on the findings of dataset with `ggplot()`

##Visualize number of rides by rider type

```{r}
tripdata_cleaned_v2 <- tripdata_cleaned %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarize(number_of_rides = n(),
            average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday) 
  p <- ggplot(data = tripdata_cleaned_v2, aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#CC6633","#6699CC")) +
  labs(title = "Number of Rides by Days and Rider Type",
       subtitle = "Members versus Casual Users") +
  ylab("Number of Rides") +
  xlab("Day of Week")
p
```

##Visualization for average duration
```{r}
tripdata_cleaned_v3 <- tripdata_cleaned %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarize(average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday) 
  p1 <- ggplot(data = tripdata_cleaned_v3, aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#CC6633","#6699CC")) +
  labs(title = "Average Duration of Rides by Days and Rider Type",
       subtitle = "Members versus Casual Users") +
  ylab("Average Duration of Rides") +
  xlab("Day of Week")
p1
```

##Average ride_length by type and day of week
```{r}
counts <- aggregate(tripdata_cleaned$ride_length ~ tripdata_cleaned$member_casual +
                      tripdata_cleaned$day_of_week, FUN = mean)
glimpse(counts)
```

##Average ride_length and type and month

```{r}
tripdata_cleaned$month <- month(tripdata_cleaned$started_at, label = TRUE)
rides <- aggregate(tripdata_cleaned$ride_length ~ tripdata_cleaned$member_casual +
                     tripdata_cleaned$month,FUN = mean)
write.csv(rides, file = 'avg_ride_length_by_month.csv')
```

##Create output file to use on Tableau

`all_trips <- tripdata_cleaned %>% `
  `select(-day_of_week)`
`all_trips$day_of_week <- wday(all_trips$started_at, label = TRUE)`
`write.csv(all_trips, file = "all_trips.csv", row.names = FALSE)`
`write.csv(counts, file = 'avg_ride-length.csv')`
```{r eval=FALSE, include=FALSE}
all_trips <- tripdata_cleaned %>% 
  select(-day_of_week)
all_trips$day_of_week <- wday(all_trips$started_at, label = TRUE)
write.csv(all_trips, file = "all_trips.csv", row.names = FALSE)
write.csv(counts, file = 'avg_ride-length.csv')
